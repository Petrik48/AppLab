{"version":3,"sources":["components/TodoForm/todoForm.module.scss","components/TodoList/Todo/todo.module.scss","components/TodoForm/TodoForm.jsx","components/TodoForm/useInputState.js","components/TodoList/Todo/Todo.jsx","components/TodoList/Todo/useTodoTextState.js","components/TodoList/TodoList.module.jsx","App.js","useTodoState.js","index.js"],"names":["module","exports","TodoForm","saveTodo","useState","value","setValue","onChange","event","target","reset","useInputState","className","styles","todoForm","onSubmit","preventDefault","type","placeholder","Todo","id","date","done","deleteTodo","markTodoAsDone","editTodo","editingTodo","setEditingTodo","initialValue","todoText","setTodoText","useTodoTextState","left","opposite","todo","todoDone","todoInfo","todoEditInput","autoFocus","onDoubleClick","todoDate","todoButtons","todoEditButton","onClick","width","height","viewBox","fill","xmlns","d","todoDeleteButton","TodoListModule","todos","todoListElements","map","index","text","todoList","App","props","setTodos","today","Date","dateTime","getDate","slice","getMonth","getFullYear","join","getHours","getMinutes","getSeconds","addTodo","Math","random","toString","substr","todoId","filter","newText","useTodoState","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db8b71c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoForm\":\"todoForm_todoForm__1vYDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"todo_todo__3SJoT\",\"todoDone\":\"todo_todoDone__1Sztu\",\"todoInfo\":\"todo_todoInfo__2qf9-\",\"todoText\":\"todo_todoText__2W9sH\",\"todoEditInput\":\"todo_todoEditInput__gi5JX\",\"todoDate\":\"todo_todoDate__2CHx6\",\"todoButtons\":\"todo_todoButtons__3chBI\"};","import React from 'react';\r\nimport styles from './todoForm.module.scss';\r\nimport useInputState from \"./useInputState\";\r\n\r\nconst TodoForm = ({saveTodo}) => {\r\n  const {value, reset, onChange} = useInputState();\r\n\r\n  return (\r\n    <form className={styles.todoForm}\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n\r\n            saveTodo(value);\r\n            reset();\r\n          }}\r\n    >\r\n      <input type=\"text\"\r\n             placeholder='Add todo'\r\n             value={value}\r\n             onChange={onChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm;\r\n        ","import {useState} from \"react\";\r\n\r\nexport default () => {\r\n  const [value, setValue] = useState('');\r\n\r\n  return {\r\n    value,\r\n    onChange: event => {\r\n      setValue(event.target.value);\r\n    },\r\n    reset:() => setValue('')\r\n  };\r\n};","import React, {useState} from 'react';\r\nimport styles from './todo.module.scss';\r\nimport useTodoTextState from \"./useTodoTextState\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst Todo = ({id, value, date, done, deleteTodo, markTodoAsDone, editTodo}) => {\r\n  const [editingTodo, setEditingTodo] = useState(false);\r\n  const {todoText, onChange} = useTodoTextState(value);\r\n\r\n  return (\r\n    <Fade left opposite >\r\n      <div className={`${styles.todo} ${done && styles.todoDone}`}>\r\n        <div className={styles.todoInfo}>\r\n          {\r\n            !editingTodo\r\n              ? <p className={styles.todoText} onDoubleClick={() => {\r\n                setEditingTodo(true);\r\n              }\r\n              }>{value}</p>\r\n              : <form onSubmit={(event) => {\r\n                event.preventDefault();\r\n                if (todoText) {\r\n                  editTodo(id, todoText);\r\n                  setEditingTodo(false);\r\n                }\r\n              }}>\r\n                <input className={styles.todoEditInput} type=\"text\" value={todoText} onChange={onChange} autoFocus />\r\n              </form>\r\n          }\r\n          <span className={styles.todoDate}>{date}</span>\r\n        </div>\r\n        <div className={styles.todoButtons}>\r\n          {\r\n            done\r\n              ? <button className={styles.todoEditButton} onClick={() => {\r\n                markTodoAsDone(id)\r\n              }}>\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M12 2C6.47 2 2 6.47 2 12C2 17.53 6.47 22 12 22C17.53 22 22 17.53 22 12C22 6.47 17.53 2 12 2ZM17 15.59L15.59 17L12 13.41L8.41 17L7 15.59L10.59 12L7 8.41L8.41 7L12 10.59L15.59 7L17 8.41L13.41 12L17 15.59Z\"\r\n                    fill=\"#333\" />\r\n                </svg>\r\n              </button>\r\n              : <button className={styles.todoEditButton} onClick={() => {\r\n                markTodoAsDone(id)\r\n              }}>\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M18 7L16.59 5.59L10.25 11.93L11.66 13.34L18 7ZM22.24 5.59L11.66 16.17L7.48 12L6.07 13.41L11.66 19L23.66 7L22.24 5.59ZM0.410004 13.41L6 19L7.41 17.59L1.83 12L0.410004 13.41Z\"\r\n                    fill=\"#333\" />\r\n                </svg>\r\n              </button>\r\n          }\r\n          <button className={styles.todoEditButton} onClick={() => {\r\n            setEditingTodo(!editingTodo);\r\n          }}>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"M3 17.25V21H6.75L17.81 9.94L14.06 6.19L3 17.25ZM20.71 7.04C21.1 6.65 21.1 6.02 20.71 5.63L18.37 3.29C17.98 2.9 17.35 2.9 16.96 3.29L15.13 5.12L18.88 8.87L20.71 7.04V7.04Z\"\r\n                fill=\"#333\" />\r\n            </svg>\r\n          </button>\r\n          <button className={styles.todoDeleteButton} onClick={() => {\r\n            deleteTodo(id)\r\n          }}>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z\"\r\n                    fill=\"#333\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n        ","import {useState} from \"react\";\r\n\r\nexport default (initialValue) => {\r\n  const [todoText, setTodoText] = useState(initialValue);\r\n\r\n  return {\r\n    todoText,\r\n    onChange: event => {\r\n      setTodoText(event.target.value);\r\n    },\r\n  }\r\n}","import React from 'react';\r\nimport styles from './todoList.scss';\r\nimport Todo from \"./Todo/Todo\";\r\n\r\nconst TodoListModule = ({todos, deleteTodo, markTodoAsDone, editTodo}) => {\r\n  const todoListElements = todos.map((todo, index) => {\r\n    return <Todo key={index}\r\n                 id={todo.id}\r\n                 value={todo.text}\r\n                 date={todo.date}\r\n                 done={todo.done}\r\n                 deleteTodo={deleteTodo}\r\n                 markTodoAsDone={markTodoAsDone}\r\n                 editTodo={editTodo}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className={styles.todoList}>\r\n      {todoListElements}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoListModule;\r\n        ","import React from \"react\";\nimport styles from './App.scss';\nimport TodoForm from \"./components/TodoForm/TodoForm\";\nimport TodoListModule from \"./components/TodoList/TodoList.module\";\nimport useTodoState from \"./useTodoState\";\n\nconst App = (props) => {\n  const {todos, addTodo, deleteTodo, markTodoAsDone, editTodo} = useTodoState([]);\n\n  return (\n    <div className=\"app\">\n      <TodoForm\n        saveTodo={(todoText) => {\n          if (todoText.length > 0 && todos.filter((todo => todo.text === todoText)).length === 0) {\n            addTodo(todoText);\n          }\n        }} />\n      <TodoListModule todos={todos} deleteTodo={deleteTodo} markTodoAsDone={markTodoAsDone} editTodo={editTodo}/>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState} from \"react\";\r\n\r\nexport default (initialValue) => {\r\n  const [todos, setTodos] = useState(initialValue);\r\n  const today = new Date();\r\n  const date = [('0' + today.getDate()).slice(-2), ('0' + today.getMonth()).slice(-2), today.getFullYear()].join('-');\r\n  const time = [today.getHours(), ('0' + today.getMinutes()).slice(-2), ('0' + today.getSeconds()).slice(-2)].join(':');\r\n  const dateTime = date + ' ' + time;\r\n\r\n  return {\r\n    todos,\r\n    addTodo: (todoText) => {\r\n      setTodos([...todos, {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        text: todoText,\r\n        date: dateTime,\r\n        done: false,\r\n      }]);\r\n    },\r\n    deleteTodo: (todoId) => {\r\n      setTodos(todos.filter(todo => todo.id !== todoId))\r\n    },\r\n    markTodoAsDone: (id) => {\r\n      setTodos(todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.done = !todo.done\r\n        }\r\n        return todo;\r\n      }))\r\n    },\r\n    editTodo: (id, newText) => {\r\n      setTodos(todos.map(todo => {\r\n        if (todo.id === id && todo.text !== newText) {\r\n          todo.text = newText;\r\n          todo.date = dateTime;\r\n        }\r\n        return todo;\r\n      }))\r\n    }\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}